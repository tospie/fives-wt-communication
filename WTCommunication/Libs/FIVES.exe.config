<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <configSections>
        <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
        <sectionGroup name="ServiceBusConfiguration">
          <section name="Services" type="System.Configuration.AppSettingsSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        </sectionGroup>
    </configSections>

    <appSettings>
        <add key="PluginDir" value="." />
        <!-- <add key="PluginBlackList" value="." /> -->
        <add key="PluginWhiteList" value="SINFONIPlugin,ClientManager,WTCommunication,WTComponents,Terminal,Location" />
        <add key="ProtocolDir" value="." />
        <add key="ProtocolWhiteList" value="BinaryProtocol,WebSocketJSON"/>
        <!-- JUST FOR TESTING! SHOULD BE HANDLED AUTOMATICALLY SOMEHOW. KIARA TO CORE??-->
        <add key="ServerIDL" value="http://localhost:8181/fives/fives.kiara/"/>
    </appSettings>

    <ServiceBusConfiguration>
      <Services>
        <add key="location.position" value="AvatarCollision"/>
        <add key="motion.velocity" value="InvokeMotion"/>
        <add key="motion.rotVelocity" value="InvokeSpin"/>
      </Services>
    </ServiceBusConfiguration>

    <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <targets>
            <target name="logfile" xsi:type="File" fileName="FIVES.log" layout="${longdate}|${level:uppercase=true}|${callsite}|${logger}|${message}|${exception:format=tostring}" />
            <target name="console" xsi:type="Console" layout="${date:format=HH\:mm\:ss} [${level:uppercase=true}] {${callsite}} ${message}${onexception:${newline}EXCEPTION\: ${exception:format=tostring}}" />
        </targets>

        <rules>
            <logger name="*" minlevel="Info" writeTo="logfile" />
            <logger name="*" minlevel="Warn" writeTo="console">
                <filters>
                    <when condition="starts-with('${callsite}', 'PersistencePlugin') and (level == LogLevel.Warn) and (contains('${message}', 'No mapped documents') or contains('${message}', 'Unable to determine'))" action="Ignore" />
                </filters>
            </logger>
        </rules>
    </nlog>
</configuration>